.accordion__holder {
	--py-accordion: #{spacer(2)};
	--px-accordion: #{spacer(3)};
	--size-accordion-btn: #{spacer(1.6)};
	position: relative;
	border: 1px solid color(stone-10);

	.accordion__item {
		padding-right: var(--px-accordion);
		background-color: color(milk);

		&:not(:first-child) {
			border-top: 1px solid color(stone-10);
		}

		&:has(> .accordion__term.open) {
			background-color: color(stone-20);
		}

		@media (hover: hover) and (pointer: fine) {
			transition: background-color var(--speed-default) var(--cubic-bezier-2);

			&:hover {
				background-color: color(stone-20);
			}
		}

		.accordion__term {
			display: flex;
			gap: spacer(2);
			align-items: center;
			width: 100%;
			outline: none;
			font-size: calc(var(--font-size-base) * 1.125);
			font-weight: 700;
			padding: {
				top: var(--py-accordion);
				right: calc(var(--size-accordion-btn) + spacer(2));
				bottom: var(--py-accordion);
				left: var(--px-accordion);
			}
			cursor: pointer;
			position: relative;

			.accordion__index {
				display: flex;
				justify-content: center;
				align-items: center;
				height: 26px;
				width: 26px;
				border-radius: 50%;
				background-color: color(cola);
				font-size: 14px;
				color: color(milk);
			}

			.accordion__button {
				width: var(--size-accordion-btn);
				height: var(--size-accordion-btn);
				border-radius: 50%;
				position: absolute;
				top: 50%;
				right: 0;
				transform: translateY(-50%);

				span {
					opacity: 1;
					width: 100%;
					height: 3px;
					background-color: color(rose);
					position: absolute;
					top: 50%;
					left: 50%;
					transform: translate(-50%, -50%);
					z-index: 1;
					transition: transform var(--speed-default) var(--cubic-bezier-2), opacity var(--speed-default) var(--cubic-bezier-2);

					&:last-child {
						transform: translate(-50%, -50%) rotate(90deg);
					}
				}
			}

			&.open {
				.accordion__button {
					span {
						&:first-child {
							opacity: 0;
							transform: translate(-50%, -50%) rotate(90deg);
						}

						&:last-child {
							transform: translate(-50%, -50%) rotate(180deg);
						}
					}
				}
			}
		}

		.accordion__body {
			&.show {
				.accordion__description {
					opacity: 1;
					transform: translateY(0);
				}
			}
		}

		.accordion__description {
			opacity: 0;
			padding: {
				right: var(--px-accordion);
				bottom: var(--py-accordion);
				left: var(--px-accordion);
			}
			transform: translateY(20px);
			transition: opacity var(--speed-fast) ease-out, transform var(--speed-default) var(--cubic-bezier-2);
		}

		&:first-child {
			padding-top: 0;
		}
	}

	@include media-breakpoint-up(lg) {
		--py-accordion: #{spacer(3)};
		--px-accordion: #{spacer(4)};

		.accordion__item {
			.accordion__term {
				.accordion__index {
					position: absolute;
					top: 0;
					left: 0;
					transform: translateX(calc(-100% - #{spacer(4)}));
				}
			}
		}
	}
}
